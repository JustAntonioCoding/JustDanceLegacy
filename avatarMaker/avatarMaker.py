import os, struct, json, shutil, zlib
print('Avatar Maker by Just Antonio')
print('----------------------------')

# Notes before running
# In folder 'input' put avatar textures in one of these formats
# *codename*_*avatarNumber*.png.ckd
# *avatarNumber*.png.ckd

# Make sure to backup your avatar textures
# They are renamed and moved to folder 'output'

# Reading settings.json
with open('settings.json') as z:
    settings = json.load(z)

gameVer = settings[0]['gamever']
territory = settings[0]['territory']
platform = (settings[0]['platform']).lower()

# Making input folder for avatar.png.ckd
try:
    os.mkdir('input')
    input('Insert your *avatarnumber*.png.ckd or *codename*_*avatarNumber*.png.ckd files in input and then run the tool again.')
    exit()
except:
    pass

# Making dictionary for avatar skuscene entries for later sorting
skusceneAvatarsIscEntries = {}

# Counting avatars for skuscene_avatars.isc.ckd
avatarCount = 0
for file in os.listdir('input'):
    if file.endswith('png.ckd'):
        avatarCount += 1

# Choosing avatar type
print('Choose avatar type: \n1. Free \n2. Paid \n3. Song Unlockable \n4. Old Save Game \n5. WDF Level')
avatarType = int(input('Your choice: '))
if avatarType == 2:
    avatarPrice = int(input('Avatar price: '))
elif avatarType == 5:
    avatarWdfLvl = int(input('WDF level: '))
    if avatarWdfLvl > 1000 and platform == 'wii':
        avatarWdfLvl = 1000
    if avatarWdfLvl > 5000: # Max WDF lvl is Elite lvl 5000
        avatarWdfLvl = 5000

# Skuscene header
skusceneAvatarsIsc = b'\x00\x00\x00\x01\x00\x04\x27\xF8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
skusceneAvatarsIsc += struct.pack('>I',avatarCount)

# Loop for each avatar texture
for file in os.listdir('input'):
    if file.endswith('.png.ckd'):
        avatarCodename = file.split('_')[0] # Getting avatar codename
        if len(avatarCodename) == len(file):
            avatarCodename = 0
            avatarNumber = int(file.split('.')[0])
            print('Making avatar number ' + str(avatarNumber))
        else:
            avatarNumber = int((file.split('_')[1]).split('.')[0])
            print('Making avatar number ' + str(avatarNumber) + ' with codename ' + avatarCodename)

    avatarNumberFull = str(avatarNumber).zfill(4)
    
    # Making avatar.act.ckd
    avatarAct = b'\x00\x00\x00\x01\x00\x00\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00'
    avatarTplFile = 'desc.tpl'
    avatarTplPath = 'world/avatars/' + avatarNumberFull + '/'
    avatarAct += struct.pack('>I',len(avatarTplFile)) + avatarTplFile.encode()
    avatarAct += struct.pack('>I',len(avatarTplPath)) + avatarTplPath.encode()
    avatarAct += struct.pack('>I',zlib.crc32((avatarTplPath + avatarTplFile).encode()))
    avatarAct += b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x72\xB6\x1F\xC5\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00'
    avatarPngFile = 'avatar.png'
    avatarPngPath = 'world/avatars/' + avatarNumberFull + '/'
    avatarAct += struct.pack('>I',len(avatarPngFile)) + avatarPngFile.encode()
    avatarAct += struct.pack('>I',len(avatarPngPath)) + avatarPngPath.encode()
    avatarAct += struct.pack('>I',zlib.crc32((avatarPngPath+avatarPngFile).encode()))
    avatarAct += b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0A\x61\x76\x61\x74\x61\x72\x2E\x61\x74\x6C\x00\x00\x00\x0F\x77\x6F\x72\x6C\x64\x2F\x75\x69\x2F\x61\x74\x6C\x61\x73\x2F\x0A\x6F\x64\x68\x00\x00\x00\x00\x00\x00\x00\x09\x61\x6C\x70\x68\x61\x2E\x6D\x73\x68\x00\x00\x00\x13\x77\x6F\x72\x6C\x64\x2F\x75\x69\x2F\x6D\x61\x74\x65\x72\x69\x61\x6C\x73\x2F\xD2\x85\x4E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x17\x59\xE2\x9D'
    
    # Making desc.tpl.ckd
    avatarDesc = b'\x00\x00\x00\x01\x00\x00\x03\xDB\x1B\x85\x7B\xCE\x00\x00\x00\x6C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\xF9\xBE\x08\x2F\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x02\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3F\xE6\x66\x66\x3E\x99\x99\x9A\x00\x00\x01\x34\x00\x00\x00\x24\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x3F\x80\x00\x00\x40\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x34\x00\x00\x00\x24\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x27\xC6\xD3\x39\x00\x00\x00\x54'
    avatarDesc += struct.pack('>I',gameVer)
    
    if avatarCodename == 0:
        avatarDesc += struct.pack('>I',0) # put zero instead of codename
    else:
        avatarDesc += struct.pack('>I',len(avatarCodename)) + avatarCodename.encode()

    avatarActFile = avatarNumberFull + '.act'
    avatarActPath = 'world/avatars/' + avatarNumberFull + '/'
    avatarDesc += struct.pack('>I',len(avatarActFile)) + avatarActFile.encode()
    avatarDesc += struct.pack('>I',len(avatarActPath)) + avatarActPath.encode()
    avatarDesc += struct.pack('>I',zlib.crc32(avatarActFile.encode()))
    avatarDesc += struct.pack('>I',0)
    avatarDesc += struct.pack('>I',avatarNumber)
    
    if avatarType == 2: # Paid
        avatarDesc += struct.pack('>I',1)
        avatarDesc += struct.pack('>I',1)
        avatarDesc += struct.pack('>I',avatarPrice)
        avatarDesc += struct.pack('>I',1)
    elif avatarType == 3: # Song unlockable
        avatarDesc += struct.pack('>I',1)
        avatarDesc += struct.pack('>I',3)
        avatarDesc += struct.pack('>I',0)
        avatarDesc += struct.pack('>I',1)
    elif avatarType == 4: # Old save game present
        avatarDesc += struct.pack('>I',1)
        avatarDesc += struct.pack('>I',19)
        avatarDesc += struct.pack('>I',0)
        avatarDesc += struct.pack('>I',1)
    elif avatarType == 5: # WDF level
        avatarDesc += struct.pack('>I',1)
        avatarDesc += struct.pack('>I',4)
        avatarDesc += struct.pack('>I',0)
        avatarDesc += struct.pack('>I',avatarWdfLvl)
    else: # Free
        avatarDesc += struct.pack('>I',3)
        avatarDesc += struct.pack('>I',20)
        avatarDesc += struct.pack('>I',0)
        avatarDesc += struct.pack('>I',1)
    avatarDesc += struct.pack('>I',1)

    # Making output folder for avatar
    avatarOutputFolder = 'output/avatars/' + avatarNumberFull
    os.makedirs(avatarOutputFolder, exist_ok=True)
    
    # Outputing avatar.act.ckd
    avatarActOutput = open(avatarOutputFolder + '/' + avatarActFile + '.ckd', 'wb')
    avatarActOutput.write(avatarAct)
    avatarActOutput.close()
    
    # Outputting desc.tpl.ckd
    avatarDescOutput = open(avatarOutputFolder + '/' + avatarTplFile + '.ckd', 'wb')
    avatarDescOutput.write(avatarDesc)
    avatarDescOutput.close()
    
    # Making skuscene entry for avatar
    skusceneAvatarsIscEntry = b'\x97\xCA\x62\x8B\x38\xFF\xDA\x40\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00'
    skusceneAvatarsIscEntry += struct.pack('>I',len(avatarNumberFull)) + avatarNumberFull.encode()
    skusceneAvatarsIscEntry += b'\xFF\xFF\xFF\xFF\xC2\x77\xFA\x10\x42\x17\xF6\x8C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00'
    skusceneAvatarsIscEntry += struct.pack('>I',len(avatarTplFile)) + avatarTplFile.encode()
    skusceneAvatarsIscEntry += struct.pack('>I',len(avatarTplPath)) + avatarTplPath.encode()
    skusceneAvatarsIscEntry += struct.pack('>I',zlib.crc32((avatarTplPath+avatarTplFile).encode()))
    skusceneAvatarsIscEntry += b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x72\xB6\x1F\xC5\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7F\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00'
    skusceneAvatarsIscEntry += struct.pack('>I',len(avatarPngFile)) + avatarPngFile.encode()
    skusceneAvatarsIscEntry += struct.pack('>I',len(avatarPngPath)) + avatarPngPath.encode()
    skusceneAvatarsIscEntry += struct.pack('>I',zlib.crc32((avatarPngPath+avatarPngFile).encode()))
    skusceneAvatarsIscEntry += b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0A\x61\x76\x61\x74\x61\x72\x2E\x61\x74\x6C\x00\x00\x00\x0F\x77\x6F\x72\x6C\x64\x2F\x75\x69\x2F\x61\x74\x6C\x61\x73\x2F\x0A\x6F\x64\x68\x00\x00\x00\x00\x00\x00\x00\x09\x61\x6C\x70\x68\x61\x2E\x6D\x73\x68\x00\x00\x00\x13\x77\x6F\x72\x6C\x64\x2F\x75\x69\x2F\x6D\x61\x74\x65\x72\x69\x61\x6C\x73\x2F\xD2\x85\x4E\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3F\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x17\x59\xE2\x9D'

    skusceneAvatarsIscEntries[avatarNumber] = skusceneAvatarsIscEntry
    
    # Renaming avatar texture to avatar.png.ckd and moving to output
    os.rename('input/' + file, 'input/avatar.png.ckd')
    shutil.move('input/avatar.png.ckd', avatarOutputFolder + '/avatar.png.ckd')
    print('Done!')

# Skuscene entries sorting and adding to skusceneAvatarsIsc
skusceneAvatarsIscEntries = dict(sorted(skusceneAvatarsIscEntries.items()))
skusceneAvatarsIscEntriesList = list(skusceneAvatarsIscEntries.values())
for i in skusceneAvatarsIscEntriesList:
    skusceneAvatarsIsc += i

# Skuscene ending
skusceneAvatarsIsc += b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xF8\x78\xDC\x2D\x00\x00\x00\x00'
skusceneAvatarsIsc += struct.pack('>I',len(territory)) + territory.encode()
skusceneAvatarsIsc += b'\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01'

# Outputing skuscene
skusceneAvatarsOutput = open('output/skuscene_avatars.isc.ckd', 'wb')
skusceneAvatarsOutput.write(skusceneAvatarsIsc)
skusceneAvatarsOutput.close()

print('You have made ' + str(avatarCount) + ' avatars!')
